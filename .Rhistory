labs(x="Sample mean", y="Density") +
xlim(c(2,8)) +
stat_function(fun = dnorm, args = list(mean = sample_mean, sd = sample_sd), size = 2)
g
sample_sd = 1/lambda/sqrt(1000)
sample_mean = 1/lambda
g <- ggplot(data=mean_popul, aes(mean_popul))
g = g + geom_histogram(alpha = .20, colour = "black",aes(y = ..density..),
binwidth=.2)
g = g +  labs(title="Histogram for sample mean") +
labs(x="Sample mean", y="Density") +
xlim(c(2,8)) +
stat_function(fun = dnorm, args = list(mean = sample_mean, sd = sample_sd), size = 2)
g
source('~/.active-rstudio-document', echo=TRUE)
mean(mean_popul)
mean(mean_popul$mean_popul)
sample_sd = 1/lambda/sqrt(n_draw)
sample_mean = 1/lambda
g <- ggplot(data=mean_popul, aes(mean_popul,fill="red"))
g = g + geom_histogram(alpha = .20, colour = "black",aes(y = ..density..),
binwidth=.2)
g = g +  labs(title="Histogram for sample mean") +
labs(x="Sample mean", y="Density") +
xlim(c(2,8)) +
stat_function(fun = dnorm, args = list(mean = sample_mean, sd = sample_sd), size = 2)
g
source('~/.active-rstudio-document', echo=TRUE)
sample_sd = 1/lambda/sqrt(n_draw)
sample_mean = 1/lambda
g <- ggplot(data=mean_popul, aes(mean_popul))
g = g + geom_histogram(alpha = .20, colour = "black",aes(y = ..density..),
binwidth=.2,fill="green")
g = g +  labs(title="Histogram for sample mean") +
labs(x="Sample mean", y="Density") +
xlim(c(2,8)) +
stat_function(fun = dnorm, args = list(mean = sample_mean, sd = sample_sd), size = 2)
g
sample_sd = 1/lambda/sqrt(n_draw)
sample_mean = 1/lambda
g <- ggplot(data=mean_popul, aes(mean_popul))
g = g + geom_histogram(alpha = .20, colour = "black",aes(y = ..density..),
binwidth=.2,fill="red")
g = g +  labs(title="Histogram for sample mean") +
labs(x="Sample mean", y="Density") +
xlim(c(2,8)) +
stat_function(fun = dnorm, args = list(mean = sample_mean, sd = sample_sd), size = 2)
g
sample_sd = 1/lambda/sqrt(n_draw)
sample_mean = 1/lambda
g <- ggplot(data=mean_popul, aes(mean_popul))
g = g + geom_histogram(alpha = .20, colour = "black",aes(y = ..density..),
binwidth=.2,fill="red")
g = g +  labs(title="Histogram for sample mean") +
labs(x="Sample mean", y="Density") +
xlim(c(2,8)) +
stat_function(fun = dnorm, args = list(mean = sample_mean, sd = sample_sd), size = 1) +
geom_vline(xintercept = 5, size = .3) +
geom_vline(xintercept = mean(mean_popul$mean_popul), size = .3,
color="red")
g
sample_sd = 1/lambda/sqrt(n_draw)
sample_mean = 1/lambda
g <- ggplot(data=mean_popul, aes(mean_popul))
g = g + geom_histogram(alpha = .20, colour = "black",aes(y = ..density..),
binwidth=.2,fill="red")
g = g +  labs(title="Histogram for sample mean") +
labs(x="Sample mean", y="Density") +
xlim(c(2,8)) +
stat_function(fun = dnorm, args = list(mean = sample_mean, sd = sample_sd), size = 1) +
geom_vline(xintercept = 5, size = .6) +
geom_vline(xintercept = mean(mean_popul$mean_popul), size = .6,
color="red")
g
sample_sd = 1/lambda/sqrt(n_draw)
sample_mean = 1/lambda
g <- ggplot(data=mean_popul, aes(mean_popul))
g = g + geom_histogram(alpha = .20, colour = "black",aes(y = ..density..),
binwidth=.2,fill="red")
g = g +  labs(title="Histogram for sample mean") +
labs(x="Sample mean", y="Density") +
xlim(c(2,8)) +
stat_function(fun = dnorm, args = list(mean = sample_mean, sd = sample_sd), size = 1) +
geom_vline(xintercept = 5, size = 1) +
geom_vline(xintercept = mean(mean_popul$mean_popul), size = 1,
color="red")
g
sd(mean_popul$mean_popul)
20000/1.2
20000/1.3
20000/1.4
20000/1.5
library(reshape2)
library(datasets)
data(ChickWeight)
wideCW(ChickWeight,Diet+Chick ~ Time, value.var="weight")
wideCW = dcast(ChickWeight,Diet+Chick ~ Time, value.var="weight")
View(ChickWeight)
View(wideCW)
data(mtcars)
ncols(mtcars)
colnames(mtcars)
str(mtcars)
mean(mtcars$mpg)
sd(mtcars$mpg)
qt(0.975,mtcars$mpg)
?qt
?qnoem
?qnorm
qnorm(0.975, mean = mean(mtcars$mpg), sd = sd(mtcars$mpg), lower.tail = TRUE)
qnorm(0.025, mean = mean(mtcars$mpg), sd = sd(mtcars$mpg), lower.tail = TRUE)
g = ggplot(mtcars,aes(x=mtcars$mpg)) + geom_histogram()
g
g = ggplot(mtcars,aes(x=mtcars$mpg)) + geom_histogram(fill=cyl)
g = ggplot(mtcars,aes(x=mtcars$mpg)) + geom_histogram(fill=mtcars$cyl)
g
g = ggplot(mtcars,aes(x=mtcars$mpg)) + geom_histogram(fill="red")
g
> qnorm(0.95, mean = mean(mtcars$mpg), sd = sd(mtcars$mpg), lower.tail = TRUE)
qnorm(0.95, mean = mean(mtcars$mpg), sd = sd(mtcars$mpg), lower.tail = TRUE)
qnorm(0.05, mean = mean(mtcars$mpg), sd = sd(mtcars$mpg), lower.tail = TRUE)
t.test(mtcars$mpg)
?t.test
pt(0.05,9)
g1 = mpg(cyl==4)
attach(mtcars)
g1 = mpg(cyl==4)
attach(mtcars)
g1 = mtcars$mpg(mtcars$cyl==4)
g1 = mtcars$mpg[mtcars$cyl==4]
g2 = mtcars$mpg[mtcars$cyl==6]
t.test(g1-g2)
t.test(g1, g2, paired = FALSE)
t.test(g1, g2, paired = FALSE,var.equal = TRUE)
data(ToothGrowth)
head(ToothGrowth)
pairs(ToothGrowth)
summary(ToothGrowth)
?ToothGrowth
require(graphics)
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,
xlab = "ToothGrowth data: length vs dose, given type of supplement")
g <- ggplot(ToothGrowth, aes(x=dose, y=len)) + geom_point(shape=1)
g
g <- g + facet_grid(. ~ supp)
g
g <- g + facet_grid(. ~ supp) + geom_smooth()
g
View(ToothGrowth)
g1_VC = ToothGrowth[supp == "VC"]
g1_OJ = ToothGrowth[supp == "OJ"]
t.test(g1_OJ-g1_VC)
g1_VC = ToothGrowth[supp == "VC"]
ToothGrowth[ToothGrowth$supp == "VC"]
View(ToothGrowth)
g1_VC = len[supp == "VC" & dose = 0.5]
g1_OJ = len[supp == "OJ" & dose = 1]
t.test(g1_OJ-g1_VC)
g1_VC = len[supp == "VC" & dose == 0.5]
g1_OJ = len[supp == "OJ" & dose == 1]
t.test(g1_OJ-g1_VC)
g1_VC = len[supp == "VC" & dose == 0.5]
attach(ToothGrowth)
g1_VC = len[supp == "VC" & dose == 0.5]
g1_VC = len[supp == "VC" & dose == 0.5]
g1_OJ = len[supp == "OJ" & dose == 1]
t.test(g1_OJ-g1_VC)
g_VC_05 = len[supp == "VC" & dose == 0.5]
g_VC_10 = len[supp == "VC" & dose == 1]
g_VC_20 = len[supp == "VC" & dose == 2]
t.test(g_VC_10-g_VC_05)$conf.int
t.test(g_VC_20-g_VC_10)$conf.int
g_OJ_05 = len[supp == "OJ" & dose == 0.5]
g_OJ_10 = len[supp == "OJ" & dose == 1]
g_OJ_20 = len[supp == "OJ" & dose == 2]
t.test(g_OJ_10-g_OJ_05)$conf.int
t.test(g_OJ_20-g_OJ_10)$conf.int
t.test(g_OJ_20-g_OJ_05)$conf.int
t.test(g_OJ_20-g_OJ_10)$conf.int
t.test(g_OJ_20-g_OJ_10)
t.test(g_OJ_05-g_VC_05)$conf.int
t.test(g_OJ_10-g_VC_10)$conf.int
t.test(g_OJ_20-g_VC_20)$conf.int
t.test(g_OJ_05-g_VC_05)$conf.int
t.test(g_OJ_05-g_VC_05,paired = TRUE)$conf.int
t.test(g_OJ_05-g_VC_05,paired = FALSE)$conf.int
t.test(g_OJ_05-g_VC_05,paired = TRUE)$conf.int
g <- ggplot(ToothGrowth, aes(x=supp, y=len)) + geom_boxplot()
g <- g + facet_grid(. ~ dose)
g
g <- ggplot(ToothGrowth, aes(x=dose, y=len)) + geom_boxplot(aes(fill = factor(supp)))
g <- g + facet_grid(. ~ supp) + geom_jitter() +
g
g <- ggplot(ToothGrowth, aes(x=dose, y=len)) + geom_boxplot(aes(fill = supp)
g <- g + facet_grid(. ~ supp) + geom_jitter() +
g
g <- ggplot(ToothGrowth, aes(x=dose, y=len)) + geom_boxplot(aes(fill = supp)
g <- g + facet_grid(. ~ supp) + geom_jitter()
g
g <- ggplot(ToothGrowth, aes(x=dose, y=len)) + geom_boxplot(aes(fill = supp))
g <- g + facet_grid(. ~ supp) + geom_jitter()
g
g <- ggplot(ToothGrowth, aes(x=dose, y=len)) + geom_boxplot()
g <- g + facet_grid(. ~ supp) + geom_jitter()
g
g <- ggplot(ToothGrowth, aes(x=dose, y=len)) + geom_boxplot(aes(fill = supp))
g <- g + facet_grid(. ~ supp)
g
g <- ggplot(ToothGrowth, aes(x=dose, y=len)) + geom_boxplot()
g <- g + facet_grid(. ~ supp)
g
rm(g)
g <- ggplot(ToothGrowth, aes(x=dose, y=len)) + geom_boxplot()
g <- g + facet_grid(. ~ supp)
g
rm(list=ls())
g <- ggplot(ToothGrowth, aes(x=dose, y=len)) + geom_boxplot()
g
g <- g + facet_grid(. ~ supp)
g
g <- ggplot(ToothGrowth, aes(x=supp, y=len)) + geom_boxplot()
g
g <- g + facet_grid(. ~ dose)
g
g <- ggplot(ToothGrowth, aes(x=dose, y=len)) + geom_boxplot()
g <- g + facet_grid(. ~ supp)
g
rm(g)
g <- ggplot(ToothGrowth, aes(x=dose, y=len))
g <- g + facet_grid(. ~ supp) + geom_boxplot()
g
rm(g)
g <- ggplot(ToothGrowth, aes(x=dose, y=len))
g <- g + facet_grid(. ~ supp) + geom_point()
g
g  = g + geom_boxplot()
g
g  = g + geom_boxplot(. ~ supp)
g
g  = g + geom_boxplot(. ~ dose)
g
rm(g)
g <- ggplot(ToothGrowth, aes(x=dose, y=len)) + facet_grid(. ~ supp)
g + geom_boxplot()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
g <- ggplot(ToothGrowth, aes(x=supp, y=len)) + geom_boxplot()
g <- g + facet_grid(. ~ dose)
g
g <- ggplot(ToothGrowth, aes(x=dose, y=len)) + geom_boxplot()
g <- g + facet_grid(. ~ supp)
g
g <- ggplot(ToothGrowth, aes(x=factor(dose), y=len)) + geom_boxplot(shape=1)
g <- g + facet_grid(. ~ supp)
g
g <- ggplot(ToothGrowth, aes(x=supp, y=len)) + geom_boxplot(fill=supp)
g <- g + facet_grid(. ~ dose)
g
g <- ggplot(ToothGrowth, aes(x=supp, y=len)) + geom_boxplot(aes(fill = supp))
g <- g + facet_grid(. ~ dose)
g
g <- ggplot(ToothGrowth, aes(x=supp, y=len)) +
geom_boxplot(aes(fill = supp)) + geom_point()
g + facet_grid(. ~ dose)
g <- ggplot(ToothGrowth, aes(x=factor(dose), y=len)) +
geom_boxplot(aes(fill=factor(dose))) + geom_point()
g <- g + facet_grid(. ~ supp)
g
rm(list=ls())
library(datasets)
data(mtcars)
pairs(mtcars)
lm(mpg ~ ., data=mtcars)
fit = lm(mpg ~ ., data=mtcars)
summary(fit)
?mtcars
fit = glm(mpg ~ ., data=mtcars)
summary(fit)
mtcars$cyl = as.factor(mtcars$cyl)
mtcars$am = as.factor(mtcars$am)
fit = glm(mpg ~ ., data=mtcars)
summary(fit)
fit = glm(mpg ~ . - drat, data=mtcars)
summary(fit)
fit = glm(mpg ~ . - drat - gear, data=mtcars)
summary(fit)
fit = glm(mpg ~ . - drat - gear - carb, data=mtcars)
summary(fit)
fit = lm(mpg ~ . - drat - gear - carb, data=mtcars)
summary(fit)
fit = lm(mpg ~ am, data=mtcars)
summary(fit)
fit = lm(mpg ~ am + wt, data=mtcars)
summary(fit)
mtcars$am = as.numeric(mtcars$am)
fit = lm(mpg ~ am + wt, data=mtcars)
summary(fit)
fit = lm(mpg ~ am + wt + hp, data=mtcars)
summary(fit)
pairs(mtcars)
fit = lm(am ~ wt + hp, data=mtcars)
summary(fit)
fit = lm(am ~ wt, data=mtcars)
summary(fit)
fit = lm(hp ~ disp, data=mtcars)
summary(fit)
fit = lm(hp ~ wt, data=mtcars)
summary(fit)
cor(mtcars)
mtcars$cyl = as.numeric(mtcars$cyl)
cor(mtcars)
fit = lm(mpg ~ . - cyl - disp - hp, data=mtcars)
summary(fit)
fit = lm(mpg ~ . - cyl - disp - hp - vs -gear, data=mtcars)
summary(fit)
fit = lm(mpg ~ . - cyl - disp - hp - vs -gear-drat, data=mtcars)
summary(fit)
require(graphics)
pairs(mtcars, main = "mtcars data")
coplot(mpg ~ disp | as.factor(cyl), data = mtcars,
panel = panel.smooth, rows = 1)
coplot(mpg ~ . | as.factor(wt), data = mtcars,
panel = panel.smooth, rows = 1)
coplot(mpg ~ am | as.factor(wt), data = mtcars,
panel = panel.smooth, rows = 1)
coplot(mpg ~ wt | as.factor(am), data = mtcars,
panel = panel.smooth, rows = 1)
coplot(mpg ~ am | as.factor(cyl), data = mtcars,
panel = panel.smooth, rows = 1)
coplot(mpg ~ am, data = mtcars,
panel = panel.smooth, rows = 1)
qplot(mpg ~ am, data = mtcars,
panel = panel.smooth, rows = 1)
pairs(~ mpg + am + cyl + wt + hp)
fit = lm(mpg ~ cyl + wt)
summary(fit)
mtcars$cyl = as.factor(mtcars$cyl)
fit = lm(mpg ~ cyl + wt)
summary(fit)
fit = lm(mpg ~ factor(cyl) + wt,data=mtcars)
summary(fit)
head(mtcars)
?mtcars
View(mtcars)
data(mtcars)
head(mtcars)
View(mtcars)
fit = lm(mpg ~ factor(cyl) + wt,data=mtcars)
summary(fit)
fit = lm(mpg ~ factor(cyl),data=mtcars)
summary(fit)
fit = lm(mpg ~ factor(cyl) + wt,data=mtcars)
summary(fit)
fit = lm(mpg ~ factor(cyl) + wt + factor(cyl) * wt,data=mtcars)
summary(fit)
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit = lm(x~y)
lm.influence(fit)
plot(x,t)
plot(x,y)
hat(x, intercept = TRUE)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit = lm(x~y)
lm.influence(fit)
influence.measures(model)
influence.measures(fit)
dfbeta(fit)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit = lm(y~x)
lm.influence(fit)
dfbeta(fit)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y~x)
influence.measures(fit)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y~x)
influence.measures(fit)
fit1 <- lm(mpg ~ am)
fit2 <- lm(mpg ~ am + wt)
fit3 <- lm(mpg ~ am + wt + qsec)
anova(fit1,fit2,fit3)
fit1 <- lm(mpg ~ am)
fit2 <- lm(mpg ~ am + wt)
fit3 <- lm(mpg ~ am + wt + qsec)
fit3 <- lm(mpg ~ am + wt + qsec + vs)
anova(fit1,fit2,fit3,fit4)
fit1 <- lm(mpg ~ am)
fit2 <- lm(mpg ~ am + wt)
fit3 <- lm(mpg ~ am + wt + qsec)
fit4 <- lm(mpg ~ am + wt + qsec + vs)
anova(fit1,fit2,fit3,fit4)
attach(mtcars)
cor(cyl,disp,hp)
cor(mtacrs$cyl,mtacrs$disp,mtacrs$hp)
cor(c(cyl,disp,hp))
?cor
cor(mtcars)
cor(data.frame(cyl,disp,hp))
cor(data.frame(cyl,drat,wt,qsec))
cor(data.frame(cyl,drat,wt,mpg))
cor(data.frame(mpg,cyl,disp,hp,wt,am))
ggpairs(mtcars)
library(ggplot2)
ggpairs(mtcars)
source('~/.active-rstudio-document', echo=TRUE)
rm(list=ls())
source('~/.active-rstudio-document', echo=TRUE)
fit2 <- lm(mpg ~ factory(am) + wt)
summary(fit2)$coef
fit1 <- lm(mpg ~ factor(am), data=mtcars);
summary(fit1)$coef
fit1 <- lm(mpg ~ factor(am), data=mtcars);
summary(fit1)
fit1 <- lm(mpg ~ factor(am), data=mtcars);
summary(fit2)
source('~/.active-rstudio-document', echo=TRUE)
install.packages('KernSmooth')
?KernSmooth
??KernSmooth
packageDescription('KernSmooth')
library(KernSmooth)
x <- 4L
class(x)
x
x <- 4L)
x <- 4L0
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- list(2, "a", "b", TRUE)
x[[1:2]]
x <- list(2, "a", "b", TRUE)
x[[1,2]]
x <- list(2, "a", "b", TRUE)
x[[1]]
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- list(2, "a", "b", TRUE)
a=x[[1]]
class(a)
x <- 1:4
y <- 2
x + y
x <- 1:4
y <- 2:3
x + y
x <- 1:4
y <- 2:3
b=x + y
class(b)
mydata=read.csv("/Users/pacha/Dropbox/R/R\ Programming/quiz1/hw1_data.csv")
mydata=read.csv("/Users/alibagherpour/Documents/LearnR/hw1_data.csv")
names(mydata)
#Question 12
#Extract the first 2 rows of the data frame and print them to the console. What does the output look like?
mydata[c(1,2),]
#Question 13
#How many observations (i.e. rows) are in this data frame?
nrow(mydata)
#Question 14
#Extract the last 2 rows of the data frame and print them to the console. What does the output look like?
mydata[c(152,153),]
#Question 15
#What is the value of Ozone in the 47th row?
mydata[47,]
#Question 16
#How many missing values are in the Ozone column of this data frame?
#para 1 variable
sum(is.na(mydata$Ozone))
#para toda la matriz
propmiss <- function(dataframe) lapply(dataframe,function(x) data.frame(nmiss=sum(is.na(x)), n=length(x), propmiss=sum(is.na(x))/length(x)))
propmiss(mydata)
#Question 17
#What is the mean of the Ozone column in this dataset? Exclude missing values (coded as NA) from this calculation.
#forma 1
mean(mydata$Ozone,na.rm=TRUE)
#forma 2
sum(mydata$Ozone,na.rm=TRUE)/sum(!is.na(mydata$Ozone))
#Question 18
#Extract the subset of rows of the data frame where Ozone values are above 31 and Temp values are above 90. What is the mean of Solar.R in this subset?
mean(mydata$Solar.R [mydata$Ozone>31 & mydata$Temp>90], na.rm=TRUE)
#Question 19
#What is the mean of "Temp" when "Month" is equal to 6?
mean(mydata$Temp [mydata$Month==6], na.rm=TRUE)
#Question 20
#What was the maximum ozone value in the month of May (i.e. Month = 5)?
max(mydata$Ozone [mydata$Month==5], na.rm=TRUE)
library(caret)
library(ggplot2)
library(rattle)
library(rpart)
setwd('/Users/alibagherpour/Documents/LearnR/Practical Machine Learning/Prediction_Assignment')
rm(list=ls())
train_data = read.csv("pml-training.csv")
test_data = read.csv("pml-testing.csv")
names(test_data)
names(train_data)
names(test_data)[160]
names(test_data)[160]=classe
names(test_data)[160]="classe"
names(test_data)
train_data = train_data[, colSums(is.na(test_data)) != nrow(test_data)]
test_data = test_data[, colSums(is.na(test_data)) != nrow(test_data)]
names(train_data)
